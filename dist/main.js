!function(g){var n={};function C(I){if(n[I])return n[I].exports;var t=n[I]={i:I,l:!1,exports:{}};return g[I].call(t.exports,t,t.exports,C),t.l=!0,t.exports}C.m=g,C.c=n,C.d=function(g,n,I){C.o(g,n)||Object.defineProperty(g,n,{enumerable:!0,get:I})},C.r=function(g){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})},C.t=function(g,n){if(1&n&&(g=C(g)),8&n)return g;if(4&n&&"object"==typeof g&&g&&g.__esModule)return g;var I=Object.create(null);if(C.r(I),Object.defineProperty(I,"default",{enumerable:!0,value:g}),2&n&&"string"!=typeof g)for(var t in g)C.d(I,t,function(n){return g[n]}.bind(null,t));return I},C.n=function(g){var n=g&&g.__esModule?function(){return g.default}:function(){return g};return C.d(n,"a",n),n},C.o=function(g,n){return Object.prototype.hasOwnProperty.call(g,n)},C.p="/dist",C(C.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/model.js\n/* eslint-disable class-methods-use-this */\nclass Model {\n  constructor() {\n    this.weekDays = {\n      en: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n      ru: ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье'],\n      be: ['Панядзелак', 'Аўторак', 'Серада', 'Чацьвер', 'Пятніца', 'Субота', 'Нядзеля'],\n    };\n\n    this.month = {\n      en: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      ru: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n      be: ['Студзень', 'Люты', 'Сакавік', 'Красавік', 'Май', 'Чэрвень', 'Ліпень', 'Жнівень', 'Верасень', 'Кастрычнік', 'Лістапад', 'Снежань'],\n    };\n  }\n\n  getWeekDay(date, lang = 'en') {\n    const monthIndexes = [1, 4, 4, 0, 2, 5, 0, 3, 6, 1, 4, 6];\n\n    const dayIndex = date.slice(8, 11);\n    const monthIndex = monthIndexes[date.slice(5, 7)[0] !== '0' ? date.slice(5, 7) - 1 : date.slice(6, 7) - 1];\n    const yearIndex = (6 + date.slice(2, 4) + Math.floor(date.slice(2, 4) / 4)) % 7;\n    return this.weekDays[`${lang}`][((+dayIndex + monthIndex + yearIndex) % 7)];\n  }\n\n  async getImage() {\n    const url = 'https://api.unsplash.com/photos/random?orientation=landscape&per_page=1&query=nature&client_id=ebcfbb768413a5cb9a59d5ca8d306206da060493b6b0a5a811bb3c5792f08b38';\n\n    return fetch(url)\n      .then((res) => res.json())\n      .then((data) => data);\n  }\n\n  async getWeather(city, lang = 'en') {\n    const url = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&lang=${lang}&units=metric&APPID=6003d99dd729f938fb1ae682a5c935e5`;\n\n    return fetch(url)\n      .then((res) => res.json())\n      .then((data) => data);\n  }\n\n  async getMap() {\n    return fetch('https://ipinfo.io/json?token=741035a439db1b')\n      .then((res) => res.json())\n      .then((data) => data);\n  }\n\n  async getLocation(city, lang = 'en') {\n    const url = `https://api.opencagedata.com/geocode/v1/json?q=${city}&key=7e137342f87443fe84785827a1c6b056&language=${lang}`;\n\n    return fetch(url)\n      .then((res) => res.json())\n      .then((data) => data);\n  }\n}\n\n/* harmony default export */ var src_model = (Model);\n\n// CONCATENATED MODULE: ./src/helper.js\n/* eslint-disable no-param-reassign */\nclass EventEmitter {\n  constructor() {\n    this.events = {};\n  }\n\n  on(type, listener) {\n    this.events[type] = this.events[type] || [];\n    this.events[type].push(listener);\n  }\n\n  emit(type, arg) {\n    if (this.events[type]) {\n      this.events[type].forEach((listener) => listener(arg));\n    }\n  }\n}\n\nfunction Save(name, data) {\n  localStorage.setItem(name, data);\n}\n\nfunction Load(name) {\n  return localStorage.getItem(name);\n}\n\nfunction F2C(numb) {\n  return Math.round((numb - 32) / (9 / 5));\n}\n\nfunction C2F(numb) {\n  return Math.round(((numb * 9) / 5) + 32);\n}\n\n\n\n\n// CONCATENATED MODULE: ./src/view.js\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable no-new */\n/* eslint-disable no-undef */\n/* eslint-disable no-useless-constructor */\n/* eslint-disable class-methods-use-this */\n\n\nclass view_View extends EventEmitter {\n  constructor() {\n    super();\n  }\n\n  Events() {\n    Array.from(document.getElementsByClassName('temp-change')).forEach((elem) => elem.addEventListener('click', this.TempChange.bind(this)));\n\n    document.getElementById('lang').addEventListener('change', this.LangChange.bind(this));\n\n    document.getElementById('upd').addEventListener('click', this.ChangeImage.bind(this));\n\n    document.getElementById('btn-search').addEventListener('click', this.Search.bind(this));\n  }\n\n  Search() {\n    Save('town', document.getElementById('town-input').value);\n    this.UpdatePage({ town: document.getElementById('town-input').value });\n  }\n\n  UpdatePage({ town }) {\n    this.emit('town-upd', { town, lang: Load('lang') });\n  }\n\n\n  ChangeImage() {\n    this.emit('update', {});\n  }\n\n  LangChange(event) {\n    Save('lang', event.currentTarget.value);\n    this.emit('lang-upd', { town: Load('town'), lang: event.currentTarget.value });\n  }\n\n  TempChange(event) {\n    document.querySelector('.state-menu__units_active').classList.remove('state-menu__units_active');\n    event.target.classList.add('state-menu__units_active');\n\n    if (Load('temp') === 'cel' && event.target.innerHTML !== '℃') {\n      Array.from(document.getElementsByClassName('temp')).forEach((elem) => {\n        elem.innerHTML = `${C2F(elem.innerHTML.slice(0, elem.innerHTML.length - 1))}°`;\n        Save('temp', 'far');\n      });\n    } else if (Load('temp') === 'far' && event.target.innerHTML !== '℉') {\n      Array.from(document.getElementsByClassName('temp')).forEach((elem) => {\n        elem.innerHTML = `${F2C(elem.innerHTML.slice(0, elem.innerHTML.length - 1))}°`;\n        Save('temp', 'cel');\n      });\n    }\n  }\n\n  UpdateMap({ lat, lng }) {\n    mapboxgl.accessToken = 'pk.eyJ1IjoiamFyZWwiLCJhIjoiY2s0NnU3aW9pMG0zYzNmcXU0N2pocmhxeiJ9.TSTbGi1CSWFR_cJMXyHXng';\n    new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: 11,\n    });\n  }\n\n\n  UpdateImage({ image }) {\n    document.getElementsByTagName('body')[0].style.backgroundImage = `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),url('${image}')`;\n  }\n\n\n  CreateHTML({\n    location, weather, currentDate, lang,\n  }) {\n    const html = `\n        <nav id=\"menu\">\n            <div class=\"state-menu\">\n                <button id = \"upd\" class=\"state-menu__update\"><img src = './assets/img/Vector.png' /></button>\n                <div class=\"state-menu__lang\">\n                    <select name=\"\" id=\"lang\" class=\"state-menu__lang_select\">\n                        <option value=\"en\" ${lang === 'en' ? 'selected' : ''}>en</option>\n                        <option value=\"ru\" ${lang === 'ru' ? 'selected' : ''}>ru</option>\n                        <option value=\"be\" ${lang === 'be' ? 'selected' : ''}>be</option>\n                    </select>\n                </div>\n                <div class=\"state-menu__units\">\n                    <button class=\"temp-change state-menu__units_cel ${Load('temp') === 'cel' ? 'state-menu__units_active' : ''}\">℃</button>\n                    <button class=\"temp-change state-menu__units_far ${Load('temp') === 'far' ? 'state-menu__units_active' : ''}\">℉</button>\n                </div>\n            </div>\n            <div class=\"search\">\n                <input type=\"text\" id = 'town-input' x-webkit-speech=\"x-webkit-speech\">\n                <button id = 'btn-search'>${lang === 'ru' ? 'Поиск' : lang === 'en' ? 'Search' : 'Пошук'}</button>\n            </div>\n        </nav>\n        <main>\n            <setion class=\"weather\">\n                <div class=\"weather__main-info\">\n                    <div class=\"weather__main-info_location\">\n                        <p>${location.formatted}</p>\n                    </div>\n                    <div class=\"weather__main-info_date\">\n                        <p>${currentDate}</p>\n                    </div>\n                    <div class=\"weather__main-info_today\">\n                        <div class=\"weather__main-info_today_temp\">\n                            <p class = \"temp\">${Load('temp') === 'cel' ? Math.round(weather[8].main.temp) : C2F(weather[8].main.temp)}°</p>\n                            <div>\n                                <img class = \"weather__main-info_today_temp_img\" src = \"http://openweathermap.org/img/wn/${weather[0].weather[0].icon}@2x.png\">\n                            </div>\n                        </div>\n                        <div class=\"weather__main-info_today_description\">\n                            <p>${weather[0].weather[0].description[0].toUpperCase()}${weather[0].weather[0].description.slice(1)}</p>\n                            <p>${lang === 'en' ? 'Feels like' : lang === 'ru' ? 'Ощущается' : 'Адчуваецца'}: <span class = \"temp\">${Math.round(weather[0].main.feels_like)}°</span></p>\n                            <p>${lang === 'en' ? 'Wind' : lang === 'ru' ? 'Ветер' : 'Вецер'}: ${Math.round(weather[0].wind.speed)} m/s</p> \n                            <p>${lang === 'en' ? 'Humidity' : lang === 'ru' ? 'Влажность' : 'Вільготнасць'}: ${weather[0].main.humidity}%</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"weather__main-info_days\">\n                    <div class=\"weather__main-info_days_day\">\n                        <p>${weather[8].day}</p>\n                        <div class=\"weather__main-info_days_day_temp\">\n                        <p class = \"temp\">${Load('temp') === 'cel' ? Math.round(weather[8].main.temp) : C2F(weather[8].main.temp)}°</p>\n                        <div>\n                            <img src = \"http://openweathermap.org/img/wn/${weather[8].weather[0].icon}@2x.png\">\n                        </div>\n                    </div>\n                    </div>\n                    <div class=\"weather__main-info_days_day\">\n                        <p>${weather[16].day}</p>\n                        <div class=\"weather__main-info_days_day_temp\">\n                        <p class = \"temp\">${Load('temp') === 'cel' ? Math.round(weather[16].main.temp) : C2F(weather[16].main.temp)}°</p>\n                        <div>\n                            <img src = \"http://openweathermap.org/img/wn/${weather[16].weather[0].icon}@2x.png\">\n                        </div>\n                    </div>\n                    </div>\n                    <div class=\"weather__main-info_days_day\">\n                        <p>${weather[24].day}</p>\n                        <div class=\"weather__main-info_days_day_temp\">\n                            <p class = \"temp\">${Load('temp') === 'cel' ? Math.round(weather[24].main.temp) : C2F(weather[24].main.temp)}°</p>\n                            <div>\n                                <img src = \"http://openweathermap.org/img/wn/${weather[24].weather[0].icon}@2x.png\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </setion>\n            <aside class=\"map\">\n                <div id = \"map\" class=\"map__div\"></div>\n                <div class=\"map__location-data\">\n                    <p id=\"latitude\">${lang === 'en' ? 'Latitude' : lang === 'ru' ? 'Широта' : 'Шырата'}: ${location.annotations.DMS.lat.split(\"'\")[0]}</p>\n                    <p id=\"longitude\">${lang === 'en' ? 'Latitude' : lang === 'ru' ? 'Долгота' : 'Даўгата'}: ${location.annotations.DMS.lng.split(\"'\")[0]}</p>\n                </div>\n            </aside>\n        </main>\n            `;\n\n    document.getElementById('app').innerHTML = html;\n  }\n}\n\n/* harmony default export */ var src_view = (view_View);\n\n// CONCATENATED MODULE: ./src/controller.js\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-return-assign */\n\n\nclass controller_Controller {\n  constructor(model, view) {\n    this.model = model;\n    this.view = view;\n\n    if (!Load('temp')) Save('temp', 'cel');\n\n    this.Render({ town: '', lang: Load('lang') || 'en' });\n\n    view.on('update', this.ImageReload.bind(this));\n    view.on('lang', this.Render.bind(this));\n    view.on('town-upd', this.TownReload.bind(this));\n    view.on('lang-upd', this.LangReload.bind(this));\n  }\n\n  async LangReload({ town, lang }) {\n    if (!town) {\n      town = '';\n    }\n\n    if (!lang) {\n      lang = 'en';\n    }\n\n    const map = town ? { city: `${town}` } : await this.model.getMap();\n\n    const location = await this.model.getLocation(map.city, lang);\n    const weather = await this.model.getWeather(map.city, lang);\n    weather.list.map((elem) => elem.day = this.model.getWeekDay(elem.dt_txt.slice(0, 11), lang));\n    const date = new Date();\n\n    const minutes = date.getMinutes().toString().length - 1 ? date.getMinutes() : `0${date.getMinutes()}`;\n    const currentDate = `${this.model.weekDays[`${lang}`][date.getDay()]} ${date.getDate()} ${this.model.month[`${lang}`][date.getMonth() - 1]} ${date.getHours()}:${minutes}`;\n\n    this.view.CreateHTML({\n      location: location.results[0],\n      weather: weather.list,\n      currentDate,\n      lang,\n    });\n\n    this.view.Events();\n\n    this.view.UpdateMap({\n      lat: location.results[0].annotations.OSM.url.split('/')[4],\n      lng: location.results[0].annotations.OSM.url.split('/')[5],\n    });\n  }\n\n  async ImageReload() {\n    const image = await this.model.getImage();\n    this.view.UpdateImage({ image: image.urls.regular });\n  }\n\n  async TownReload({ town, lang }) {\n    if (!town) {\n      town = '';\n    }\n\n    if (!lang) {\n      lang = 'en';\n    }\n\n    const map = town ? { city: `${town}` } : await this.model.getMap();\n    Save('town', map.city);\n\n    const location = await this.model.getLocation(map.city, lang);\n    const weather = await this.model.getWeather(map.city, lang);\n    weather.list.map((elem) => elem.day = this.model.getWeekDay(elem.dt_txt.slice(0, 11), lang));\n    const date = new Date();\n\n    const minutes = date.getMinutes().toString().length - 1 ? date.getMinutes() : `0${date.getMinutes()}`;\n    const currentDate = `${this.model.weekDays[`${lang}`][date.getDay()]} ${date.getDate()} ${this.model.month[`${lang}`][date.getMonth() - 1]} ${date.getHours()}:${minutes}`;\n\n    this.view.CreateHTML({\n      location: location.results[0],\n      weather: weather.list,\n      currentDate,\n      lang,\n    });\n\n    this.view.Events();\n\n    this.view.UpdateMap({\n      lat: location.results[0].annotations.OSM.url.split('/')[4],\n      lng: location.results[0].annotations.OSM.url.split('/')[5],\n    });\n  }\n\n  async Render({ town, lang }) {\n    if (!town) {\n      town = '';\n    }\n\n    if (!lang) {\n      lang = 'en';\n    }\n\n    const map = town ? { city: `${town}` } : await this.model.getMap();\n    Save('town', map.city);\n\n    const location = await this.model.getLocation(map.city, lang);\n    const image = await this.model.getImage();\n    const weather = await this.model.getWeather(map.city, lang);\n    weather.list.map((elem) => elem.day = this.model.getWeekDay(elem.dt_txt.slice(0, 11), lang));\n    const date = new Date();\n\n    const minutes = date.getMinutes().toString().length - 1 ? date.getMinutes() : `0${date.getMinutes()}`;\n    const currentDate = `${this.model.weekDays[`${lang}`][date.getDay()]} ${date.getDate()} ${this.model.month[`${lang}`][date.getMonth() - 1]} ${date.getHours()}:${minutes}`;\n\n    this.view.CreateHTML({\n      location: location.results[0],\n      weather: weather.list,\n      currentDate,\n      lang,\n    });\n\n    this.view.UpdateImage({ image: image.urls.regular });\n\n    this.view.Events();\n    this.view.UpdateMap({\n      lat: location.results[0].annotations.OSM.url.split('/')[4],\n      lng: location.results[0].annotations.OSM.url.split('/')[5],\n    });\n  }\n}\n\n/* harmony default export */ var controller = (controller_Controller);\n\n// CONCATENATED MODULE: ./src/app.js\n\n\n\n\nconst app_model = new src_model();\nconst app_view = new src_view();\nconst app_controller = new controller(app_model, app_view);\n\n/* harmony default export */ var app = __webpack_exports__[\"default\"] = (app_controller);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);